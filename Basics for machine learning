# Machine-Learning
Basics requirements for Machine Learning
import numpy as np
import scipy as sp
import sklearn as sl
import pandas as pd
import IPython as Ip
import sys
import matplotlib as mt

# Checking the versions of all the required Libraries 

print("Numpy Version:",np.__version__)
print("SciPy Version:",sp.__version__)
print("Sci-kit Learn Version:",sl.__version__)
print("Pandas Version:",pd.__version__)
print("IPython Version:",Ip.__version__)
print("Python Version:",sys.version)
print("Matplotlib Version:",mt.__version__)

# Basics pre-requisite programs 

x = np.array([[1,2,3],[4,5,6]])
print("x :{}".format(x))

print("SciPy Introductory programs")

eye = np.eye(4,dtype=int)
print("eye :\n{}".format(eye))

print("Creating a SciPy Sparse CSR matrix")

from scipy import sparse
# conerting a NumPy array to a SciPy sparse matrix in CSR format i.e. only non-zeros entries are stored 
sparse_matrix = sparse.csr_matrix(eye)
print("SciPy Sparse CSR matrix :\n{}".format(sparse_matrix))

print("Creating a SciPy Sparse COO matrix")

data = np.ones(4)
row_indices = np.arange(4)
col_indices = np.arange(4)
eye_coo = sparse.coo_matrix((data,(row_indices,col_indices)))

print("COO representation:\n{}".format(eye_coo))

print("MatPlotLib Introductory programs")
import matplotlib.pyplot as plt

# generate a squence of numbers ranging from -10 to 10 with 100 steps in between 

x = np.linspace(-10,10,100)
# creating second array using sine
y = np.sin(x)


plt.show(plt.plot(x,y,marker="o"))

print("Pandas Introductory Program")
data = {'Name':["John","Anna","Peter","Linda"],
    'Location':["New York","Paris","Berlin","London"],
    'Age':[24,13,53,33]
}

data_pandas = pd.DataFrame(data)
print(data_pandas)
print()
print(data_pandas[data_pandas.Age>30])
